/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.UserController;
import helpers.Status;
import interfaces.CrudInterface;
import interfaces.FormUtility;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import models.User;

/**
 *
 * @author mmohl
 */
public final class FormUser extends javax.swing.JFrame implements FormUtility{
    List<User> record = new ArrayList<>();
    CrudInterface<User> controller;
    int row;
    String status;
    /**
     * Creates new form User
     */
    public FormUser() {
        initComponents();
        controller = new UserController();
        
        jTable1.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            row = jTable1.getSelectedRow();
            if (row != -1) {
                setToTextField();
                tfUsername.setEnabled(false);
                bSimpan.setEnabled(false);
                bHapus.setEnabled(true);
                bUbah.setEnabled(true);
            }
        });
        
        initialitation();
        bHapus.setEnabled(false);
        bUbah.setEnabled(false);
    }
        
    @Override
    public void loadData() {
        try {
            record = controller.Read();
        } catch (SQLException e) {
            Logger.getLogger(FormUser.class.getName())
                    .log(Level.SEVERE, null, e);
        }
    }
    
    @Override
    public void fillTable() {
        Object object[][] = new Object[record.size()][3];
        int x = 0;
        
        for(User user:record) {
            object[x][0] = user.getUsername();
            object[x][1] = user.getPassword();
            object[x][2] = user.getId();
            x++;
        }
        
        String judul[] = {"Username", "Password"};
        jTable1.setModel(new DefaultTableModel(object, judul));
        jScrollPane1.setViewportView(jTable1);
    }
    
    @Override
    public void setToTextField() {
        User user = record.get(row);
        status = user.getStatus();
        tfUsername.setText(user.getUsername());
        pfPassword1.setText(user.getPassword());
    }
    
    @Override
    public void initialitation() {
        makeNull();
        loadData();
        fillTable();
    }
    
    @Override
    public void makeNull() {
        tfUsername.setText("");
        pfPassword1.setText("");
        pfPassword2.setText("");
    }
    
    @Override
    public void bersih() {
        initialitation();
        tfUsername.setEnabled(true);
        bSimpan.setEnabled(true);
        bHapus.setEnabled(false);
        bUbah.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lUsername = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        lPassword = new javax.swing.JLabel();
        pfPassword1 = new javax.swing.JPasswordField();
        lPassword2 = new javax.swing.JLabel();
        pfPassword2 = new javax.swing.JPasswordField();
        bSimpan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        bHapus = new javax.swing.JButton();
        bUbah = new javax.swing.JButton();
        bCari = new javax.swing.JButton();
        tfKataKunci = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        lKataKunci = new javax.swing.JLabel();
        bBersih = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lUsername.setText("Username");

        tfUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfUsernameKeyTyped(evt);
            }
        });

        lPassword.setText("Password");

        lPassword2.setText("Password");

        bSimpan.setText("Save");
        bSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSimpanActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        bHapus.setText("Delete");
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });

        bUbah.setText("Update");
        bUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUbahActionPerformed(evt);
            }
        });

        bCari.setText("Search");
        bCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCariActionPerformed(evt);
            }
        });

        lKataKunci.setText("Keyword");

        bBersih.setText("Reset");
        bBersih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBersihActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lPassword2)
                                .addGap(18, 18, 18)
                                .addComponent(pfPassword2))
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lKataKunci)
                                .addGap(18, 18, 18)
                                .addComponent(tfKataKunci))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(bHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(bUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bBersih, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lUsername)
                                    .addComponent(lPassword))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pfPassword1)
                                    .addComponent(tfUsername))))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bCari)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lUsername)
                            .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lPassword)
                            .addComponent(pfPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lPassword2)
                            .addComponent(pfPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bBersih, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(bSimpan)
                                .addComponent(bHapus)
                                .addComponent(bUbah)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfKataKunci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lKataKunci))
                        .addGap(29, 29, 29)
                        .addComponent(bCari)
                        .addGap(0, 31, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSimpanActionPerformed
        // TODO add your handling code here:
        String username = tfUsername.getText();
        String password = pfPassword1.getText();
        String password2 = pfPassword2.getText();
        
        User user = new User();
        user.setUsername(username);
        user.setPassword(password);
        user.setPassword2(password2);
        
        try {
//            if ( UserController.Cek(1).equals("1") ) {
                if (user.banding()) {
                    controller.Create(user);
                    JOptionPane.showMessageDialog(rootPane, Status.SUCCESS_INSERT);
                    initialitation();
                } else {
                    JOptionPane.showMessageDialog(rootPane, password + " " + password2);
                    pfPassword1.setText("");
                    pfPassword2.setText("");
                }
//            } else {
//                JOptionPane.showMessageDialog(rootPane, UserController.ACCESS_DENIED);
//            }
        } catch (SQLException ex) {
            Logger.getLogger(FormUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bSimpanActionPerformed

    private void bUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUbahActionPerformed
        User user = new User();
        row = jTable1.getSelectedRow();
        String key = jTable1.getModel().getValueAt(row, 0).toString();
        
        try {
            user.setId( UserController.getIdUser(key) );
            user.setUsername(tfUsername.getText());
            user.setPassword(pfPassword1.getText());
            user.setPassword2(pfPassword2.getText());
            
            if (user.banding()) {
               controller.Update(user); 
               JOptionPane.showMessageDialog(rootPane, Status.SUCCESS_UPDATE);
               bersih();
            } else {
               JOptionPane.showMessageDialog(rootPane, Status.LOGIN_FAILED);
               pfPassword1.setText("");
               pfPassword2.setText("");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(FormUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bUbahActionPerformed

    private void bBersihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBersihActionPerformed
        // TODO add your handling code here:
        bersih();
    }//GEN-LAST:event_bBersihActionPerformed

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
        String name = tfUsername.getText();
 
        if (status.equals("0")) {
            int reply = JOptionPane.showConfirmDialog(rootPane, 
                    Status.TITLE_DELETE, Status.MESSAGE_DELETE, JOptionPane.YES_NO_CANCEL_OPTION);
            try {
                if (reply == JOptionPane.YES_OPTION) {
                    controller.Delete(name);
                    JOptionPane.showMessageDialog(rootPane, Status.SUCCESS_DELETE);
                    bersih();
                }
            } catch (SQLException ex) {
                Logger.getLogger(FormUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, Status.USER_ACTIVE_WARNING);
        }
        
    }//GEN-LAST:event_bHapusActionPerformed

    private void bCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCariActionPerformed

        String name = tfKataKunci.getText();
        
        if (!name.isEmpty()) {
            try {
                record = controller.Search(name);
                
                if (!record.isEmpty()) {
                    fillTable();
                    
                } else {
                    JOptionPane.showMessageDialog(rootPane, Status.FAILED_SEARCH);
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(FormUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, Status.NO_KEYWWORD);
        }
    }//GEN-LAST:event_bCariActionPerformed

    private void tfUsernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUsernameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tfUsernameKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FormUser().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBersih;
    private javax.swing.JButton bCari;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bSimpan;
    private javax.swing.JButton bUbah;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lKataKunci;
    private javax.swing.JLabel lPassword;
    private javax.swing.JLabel lPassword2;
    private javax.swing.JLabel lUsername;
    private javax.swing.JPasswordField pfPassword1;
    private javax.swing.JPasswordField pfPassword2;
    private javax.swing.JTextField tfKataKunci;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables
}
