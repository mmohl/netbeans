/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.KonsumenController;
import helpers.KTPValidator;
import helpers.Limiter;
import helpers.Status;
import interfaces.CrudInterface;
import interfaces.FormUtility;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import models.Konsumen;

/**
 *
 * @author mmohl
 */
public class FormKonsumen extends javax.swing.JFrame implements FormUtility {
    CrudInterface<Konsumen> controller;
    List<Konsumen> record = new ArrayList<>();
    int row = 0;
    int id = 0;

    /**
     * Creates new form FormKonsumen
     */
    public FormKonsumen() {
        super("Form Konsumen");
        initComponents();
        
        tfKtp.setDocument(new Limiter( (byte)16).getOnlyAngka(tfKtp));
        tfName.setDocument(new Limiter( (byte)50).getKata(tfName));
        tfPhone.setDocument(new Limiter((byte) 12).getOnlyAngka(tfPhone));
        
        rbFemale.setActionCommand("w");
        rbMale.setActionCommand("p");
        
        controller = new KonsumenController();
        jTable1.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            row = jTable1.getSelectedRow();
            
            if (row != -1) {
                Konsumen konsumen = record.get(row);
                id = Integer.parseInt(konsumen.getId());
                
                bDelete.setEnabled(true);
                bReset.setEnabled(true);
                bUpdate.setEnabled(true);
                
                setToTextField();
            }
        });
        
        initialitation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        tfKtp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfPhone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        rbMale = new javax.swing.JRadioButton();
        rbFemale = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        taAddress = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        bUpdate = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        bReset = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        tfKeyword = new javax.swing.JTextField();
        bSearch = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("KTP");

        jLabel2.setText("Name");

        jLabel3.setText("Phone");

        jLabel4.setText("Address");

        jLabel5.setText("Gender");

        genderGroup.add(rbMale);
        rbMale.setText("Male");

        genderGroup.add(rbFemale);
        rbFemale.setText("Female");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        taAddress.setColumns(20);
        taAddress.setRows(5);
        jScrollPane2.setViewportView(taAddress);

        bUpdate.setText("Update");
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        bDelete.setText("Delete");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        bReset.setText("Reset");
        bReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetActionPerformed(evt);
            }
        });

        jLabel6.setText("Keyword");

        bSearch.setText("Search");
        bSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfPhone))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(rbMale)
                                    .addGap(18, 18, 18)
                                    .addComponent(rbFemale)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfKtp)
                                        .addComponent(tfName))))
                            .addGap(34, 34, 34)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bSearch)
                    .addComponent(jScrollPane1)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(bDelete)
                        .addGap(18, 18, 18)
                        .addComponent(bReset, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(tfKeyword))
                    .addComponent(jSeparator3))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfKtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(tfPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rbMale)
                                .addComponent(rbFemale))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bUpdate)
                            .addComponent(bDelete)
                            .addComponent(bReset))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tfKeyword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetActionPerformed
        // TODO add your handling code here:
        bersih();
    }//GEN-LAST:event_bResetActionPerformed

    private void bSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchActionPerformed
        // TODO add your handling code here:
        String key = tfKeyword.getText();
        
        try {
            if (!key.isEmpty()) {
                record = controller.Search(key);
                
                if (!record.isEmpty()) {
                    fillTable();
                } else {
                    JOptionPane.showMessageDialog(rootPane, Status.FAILED_SEARCH);
                }
                
            } else {
                JOptionPane.showMessageDialog(rootPane, Status.NO_KEYWWORD);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(FormKategori.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bSearchActionPerformed

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        
        Konsumen konsumen = new Konsumen(assignToModel());
        boolean isValidKtp = new KTPValidator(konsumen.getKtp()).validate();
        boolean isValidLength = konsumen.doValidation();
        
        try {
            if ((isValidKtp != true) && isValidLength) {
                controller.Update(konsumen);
                JOptionPane.showMessageDialog(rootPane, Status.SUCCESS_UPDATE);
                bersih();
            } else {
                List<String> error = konsumen.getErrorList();
                
                if (isValidKtp) {
                    JOptionPane.showMessageDialog(rootPane, Status.KTP_IS_REGISTERED);
                }
                
                if (!error.isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, error.toArray());
                }
                
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(FormKonsumen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bUpdateActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        // TODO add your handling code here:
        String id = String.valueOf(this.id);
        
        try {
            int respon = JOptionPane.showConfirmDialog(rootPane, Status.MESSAGE_DELETE, Status.TITLE_DELETE, JOptionPane.YES_NO_CANCEL_OPTION);
            if (respon == JOptionPane.YES_OPTION) {
                controller.Delete(id);
                JOptionPane.showMessageDialog(rootPane, Status.SUCCESS_DELETE);
                bersih();
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(FormKonsumen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormKonsumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormKonsumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormKonsumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormKonsumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormKonsumen().setVisible(true);
            }
        });
    }

    @Override
    public void loadData() {
        try {
            record = controller.Read();
        } catch (SQLException ex) {
            Logger.getLogger(FormKonsumen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void fillTable() {
        Object object[][] = new Object[record.size()][5];
        int x = 0;
        
        for(Konsumen obj:record) {
            object[x][0] = obj.getKtp();
            object[x][1] = obj.getNama();
            object[x][2] = obj.getJenis_kelamin();
            object[x][3] = obj.getNohape();
            object[x][4] = obj.getAlamat();
            x++;
        }
        
        String judul[] = {"Ktp", "Name", "Gender", "Phone", "Address"};
        jTable1.setModel(new DefaultTableModel(object, judul));
        jScrollPane1.setViewportView(jTable1);
    }

    @Override
    public void setToTextField() {
        Konsumen konsumen = record.get(row);
        
        tfKtp.setText(konsumen.getKtp());
        tfName.setText(konsumen.getNama());
        tfPhone.setText(konsumen.getNohape());
        taAddress.setText(konsumen.getAlamat());
        
        switch (konsumen.getJenis_kelamin()) {
            case "p" :
                rbMale.setSelected(true);
                break;
            case "w" :
                rbFemale.setSelected(true);
                break;
        }
    }

    @Override
    public final void initialitation() {
        makeNull();
        loadData();
        fillTable();
        
        bDelete.setEnabled(false);
        bReset.setEnabled(false);
        bUpdate.setEnabled(false);
    }

    @Override
    public void makeNull() {
        tfKeyword.setText(null);
        tfKtp.setText(null);
        tfName.setText(null);
        tfPhone.setText(null);
        taAddress.setText(null);
        genderGroup.clearSelection();
    }

    @Override
    public void bersih() {
        initialitation();
    }
    
    @Override
    public Map assignToModel() {
        Map<String, String> model = new HashMap<>();
        
        String id = String.valueOf(this.id);
        String nama = tfName.getText();
        String ktp = tfKtp.getText();
        String alamat = taAddress.getText();
        String nohape = tfPhone.getText();
        String jeke = genderGroup.getSelection().getActionCommand();
        
        model.put("id", id);
        model.put("nama", nama);
        model.put("ktp", ktp);
        model.put("alamat", alamat);
        model.put("no_handphone", nohape);
        model.put("jenis_kelamin", jeke);
        
        return model;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bReset;
    private javax.swing.JButton bSearch;
    private javax.swing.JButton bUpdate;
    private javax.swing.ButtonGroup genderGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton rbFemale;
    private javax.swing.JRadioButton rbMale;
    private javax.swing.JTextArea taAddress;
    private javax.swing.JTextField tfKeyword;
    private javax.swing.JTextField tfKtp;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPhone;
    // End of variables declaration//GEN-END:variables

    
}
